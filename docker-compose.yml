services:
  db:
    image: postgres:17-alpine
    container_name: happyice-db
    restart: always
    ports:
      - '5433:5432'
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: happyice
    volumes:
      - pgdata:/var/lib/postgresql/data
      - ./backend/src/infrastructure/database/sql/init.sql:/docker-entrypoint-initdb.d/10-init.sql
      - ./backend/src/infrastructure/database/sql/seed.sql:/docker-entrypoint-initdb.d/20-seed.sql
    networks:
      - happyice-net
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U user -d happyice']
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    build: ./backend
    container_name: happyice-backend
    restart: always
    ports:
      - '3000:3000'
    environment:
      DB_USER: user
      DB_PASSWORD: password
      DB_NAME: happyice
      DB_HOST: db
      DB_PORT: 5432
      JAEGER_AGENT_HOST: jaeger
      JAEGER_AGENT_PORT: 6832
    depends_on:
      db:
        condition: service_healthy
    networks:
      - happyice-net

  frontend:
    build: ./frontend
    container_name: happyice-frontend
    restart: always
    ports:
      - '5173:5173'
    develop:
      watch:
        - action: sync
          path: ./frontend
          target: /app
          ignore:
            - node_modules/
    depends_on:
      - backend
    networks:
      - happyice-net

volumes:
  pgdata:

networks:
  happyice-net:
    driver: bridge
